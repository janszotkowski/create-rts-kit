name: Release (semantic-release from template)

on:
  push:
    branches: [ 'main' ]
    paths:
      - 'template/**'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org/'
          always-auth: true

      - name: Sync tag with npm (if npm > git)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          set -euo pipefail
          PKG_NAME=$(node -p "require('./template/package.json').name")
          if [ -z "$PKG_NAME" ]; then
            echo "❌ template/package.json nemá 'name'"; exit 1
          fi

          REGISTRY_VERSION=$(npm view "$PKG_NAME" version 2>/dev/null || true)
          echo "npm registry version: ${REGISTRY_VERSION:-<none>}"

          GIT_TAG=$(git tag --list 'v[0-9]*.[0-9]*.[0-9]*' --sort=-v:refname | head -n1 || true)
          GIT_VERSION=${GIT_TAG#v}
          echo "highest git tag: ${GIT_TAG:-<none>}"

          cmp_versions () {
            # returns 0 if $1 > $2, 1 otherwise
            node -e "const a='${1:-0.0.0}',b='${2:-0.0.0}';const pa=a.split('.').map(Number),pb=b.split('.').map(Number);let gt=false;for(let i=0;i<3;i++){if((pa[i]||0)>(pb[i]||0)){gt=true;break;}if((pa[i]||0)<(pb[i]||0)){gt=false;break;}}process.exit(gt?0:1)"
          }

          if [ -n "${REGISTRY_VERSION:-}" ]; then
            if [ -z "${GIT_VERSION:-}" ] || cmp_versions "$REGISTRY_VERSION" "$GIT_VERSION"; then
              if git rev-parse "v$REGISTRY_VERSION" >/dev/null 2>&1; then
                echo "Tag v$REGISTRY_VERSION už existuje."
              else
                echo "Creating missing tag v$REGISTRY_VERSION to match npm…"
                git tag "v$REGISTRY_VERSION"
                git push origin "v$REGISTRY_VERSION"
              fi
            fi
          fi

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx -y semantic-release
